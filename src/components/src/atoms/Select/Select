import React, { useState, useEffect } from "react";

interface props {
  onChange?: () => void;
}

const Select: React.FC<props> = (props) => {
  const [defaultSelectText, setDefaultSelectText] = useState<>("");
  const [showOptionList, setShowOptionList] = useState<>(false);
  const [optionsList, setOptionsList] = useState<>([]);


  
  useEffect(() => {
    document.addEventListener("mousedown", handleClickOutside);
    defaultSelectText(props.defaultText );
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, []);

  // select text and list area
  const handleClickOutside = (e) => {
    if (
      !e.target.classList.contains("custom-select-option") &&
      !e.target.classList.contains("selected-text")
    ) {
      setOptionsList(false);
    }
  };


 const handleListDisplay = () => {
    setOptionsList({prevState =>{!prevState.showOptionList}})
  };



 const handleOptionClick = e => {
    setDefaultSelectText(e.target.getAttribute("data-name"))
    showOptionList(false)

  };





  render() {
    const { optionsList } = props;
  return (
      <div className="custom-select-container">
        <div
          className={showOptionList ? "selected-text active" : "selected-text"}
          onClick={handleListDisplay}
        >
          {defaultSelectText}
        </div>
        {showOptionList && (
          <ul className="select-options">
            {optionsList.map(option => {
              return (
                <li
                  className="custom-select-option"
                  data-name={option.name}
                  key={option.id}
                  onClick={handleOptionClick}
                >
                  {option.name}
                </li>
              );
            })}
          </ul>
        )}
      </div>
    );
  }
}

export { Select };
